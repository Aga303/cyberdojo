
VISION AND PRINCIPLES
=====================

Deliberate Practice
-------------------
I believe that the role of deliberate practice has vast untapped potential 
in the field of software development. I am particularly passionate about
doing deliberate practice in a collaborative way. Hence cyberdojo.


Player-identification
---------------------
Players should be able to do a kata without identifying themselves.
However if players wish to identify themselves (in some way) it should
be possible to return to and continue previous katas.


Server-image
------------
The server should have a full image that can be saved onto a memory stick
and provides a pre-prepared os to boot into. This would provide a very
quick start if you wanted to run a CyberDojo server but did not have all
the compilers installed on your computer.


Enhanced file-support
---------------------
Allow filenames to have a full path including folders.


Traffic-lights
--------------
Currently the CyberDojo server has to be programmed with regexp patterns
to parse the output of cyberdojo.sh as red/yellow/green.
If the unit-test-framework is not specified in the manifest, or if it
is but there is no ruby parse-function for it then the server could
redirect to a different page which asks the players themselves to
be a human traffic-light and mark the output themselves. This would
be nice for making a very quick start in a new language. It could also be
used to gather data to test regexp patterns!


Setting up a new kata
---------------------
After adding and renaming files from a blank state and doing many increments
you may have the files in a state that you want to become the starting fileset
for a new kata. It would be nice if there was a way to click a button and
the CyberDojo server automatically did that for you.


Metrics
-------
Ultimately it might be nice if each kata-name had some kind of ranking
to measure how difficult it was. One possibility is simply the mean
time previous players took to do it. This probably requires that each 
kata be explicitly marked as finished. 








